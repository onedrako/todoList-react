{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","CreateTodoButton/index.js","TodoItem/index.js","Modal/index.js","todoForm/index.js","App/appUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","CreateTodoButton","onClick","prevState","TodoItem","onComplete","onDelete","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","Fragment","map","App","render"],"mappings":"kVAGMA,EAAcC,IAAMC,gBAG1B,SAASC,EAAaC,GAElB,MCLJ,SAAyBC,EAAUC,GAE/B,MAA0BL,IAAMM,UAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BR,IAAMM,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBV,IAAMM,SAASD,GAAvC,mBAAOM,EAAP,KAAaC,EAAb,KAuCA,OArCAZ,IAAMa,WAAU,WACdC,YAAW,WACT,IAGE,IACIC,EADEC,EAAmBC,aAAaC,QAAQd,GAG1CY,EAIFD,EAAaI,KAAKC,MAAMJ,IAHxBC,aAAaL,QAAQR,EAAUe,KAAKE,UAAUhB,IAC9CU,EAAaV,GAKfO,EAAQG,GACRL,GAAW,GACZ,MAAMH,GACLC,GAAS,MAEV,QAiBE,CACLG,OACAW,SAZe,SAACC,GACd,IACA,IAAMC,EAAkBL,KAAKE,UAAUE,GACvCN,aAAaL,QAAQR,EAAUoB,GAC/BZ,EAAQW,GACT,MAAMhB,GACLC,GAAS,KAOXC,UACAF,SDvCWkB,CAAgB,WAAY,IAH5BC,EAAb,EAAOf,KACOgB,EADd,EACIL,SACAb,EAFJ,EAEIA,QACAF,EAHJ,EAGIA,MAIJ,EAAsCP,IAAMM,SAAS,IAArD,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAAkC7B,IAAMM,UAAS,GAAjD,mBAAOwB,EAAP,KAAkBC,EAAlB,KAGMC,EAAiBN,EAAMO,QAAO,SAAAC,GAAI,QAAMA,EAAKC,aAAWC,OACxDC,EAAaX,EAAMU,OAIrBE,EAAgB,GAGpBA,GADKV,EAAYQ,QAAU,EACXV,EAEAA,EAAMO,QAAO,SAAAC,GACzB,IAAMK,EAAWL,EAAKM,KAAKC,cACrBC,EAAad,EAAYa,cAC/B,OAAOF,EAASI,SAASD,MAqC7B,OACA,cAAC3C,EAAY6C,SAAb,CAAsBC,MAAO,CACzBtC,QACAE,UACA4B,aACAL,iBACAJ,cACAC,iBACAS,gBACAQ,QArBQ,SAACN,GACb,IAAMO,EAAQ,YAAOrB,GACrBqB,EAASC,KAAK,CACVb,WAAW,EACXK,SAEJb,EAAUoB,IAgBNE,aA1CiB,SAACT,GACtB,IAAMU,EAAYxB,EAAMyB,WAAU,SAAAjB,GAAI,OAAIA,EAAKM,OAASA,KAElDO,EAAQ,YAAOrB,GACrBqB,EAASG,GAAWf,WAAY,EAEhCR,EAAUoB,IAqCNK,WAjCe,SAACZ,GACpB,IAAMU,EAAYxB,EAAMyB,WAAU,SAAAjB,GAAI,OAAIA,EAAKM,OAASA,KAElDO,EAAQ,YAAOrB,GACrBqB,EAASM,OAAOH,EAAU,GAE1BvB,EAAUoB,IA4BNjB,YACAC,gBAZJ,SAcK5B,EAAMmD,W,ME1Ef,SAASC,IACL,MAAqCvD,IAAMwD,WAAWzD,GAA/CsC,EAAP,EAAOA,WAAYL,EAAnB,EAAmBA,eACnB,OACI,qBAAIyB,UAAU,cAAd,4BAA6CzB,EAA7C,OAAiEK,EAAjE,Y,MCTR,SAASqB,IAEL,MAAsC1D,IAAMwD,WAAWzD,GAAhD6B,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eAOpB,MAAO,CACH,uBACA4B,UAAU,aACVE,YAAY,UACZd,MAAOjB,EACPgC,SAVwB,SAACC,GACzBC,QAAQC,IAAIF,EAAMG,OAAOnB,OACzBhB,EAAegC,EAAMG,OAAOnB,W,MCPpC,SAASoB,EAAS9D,GAChB,OACE,kCACE,6BACGA,EAAMmD,a,MCHf,SAASY,EAAiB/D,GACtB,MAAkCH,IAAMwD,WAAWzD,GAAjCgC,GAAlB,EAAOD,UAAP,EAAkBC,cAQlB,OACI,wBACA0B,UAAU,mBACVU,QAAS,WANTpC,GAAa,SAAAqC,GAAS,OAAKA,MAI3B,e,MCXR,SAASC,EAASlE,GAGd,OACI,qBAAIsD,UAAU,WAAd,UACA,sBACIA,UAAS,0BAAqBtD,EAAMgC,WAAa,sBACjDgC,QAAShE,EAAMmE,WAFnB,oBAMA,mBAAGb,UAAS,qBAAgBtD,EAAMgC,WAAa,wBAA/C,SACKhC,EAAMqC,OAEX,sBACIiB,UAAU,mBACVU,QAAShE,EAAMoE,SAFnB,kB,MCbR,SAASC,EAAT,GAA8B,IAAblB,EAAY,EAAZA,SACf,OAAOmB,IAASC,aACd,qBAAKjB,UAAU,kBAAf,SACGH,IAEHqB,SAASC,eAAe,U,MCL5B,SAASC,IAEL,MAAwC7E,IAAMM,SAAS,IAAvD,mBAAOwE,EAAP,KAAqBC,EAArB,KAEA,EAGI/E,IAAMwD,WAAWzD,GAFjB+C,EADJ,EACIA,QACAf,EAFJ,EAEIA,aAkBJ,OACI,uBAAMiD,SARO,SAACnB,GACdA,EAAMoB,iBACNnC,EAAQgC,GACR/C,GAAa,IAKb,UACI,wCACA,0BAAU4B,YAAY,qCACtBd,MAASiC,EACTlB,SApBS,SAACC,GACdkB,EAAgBlB,EAAMG,OAAOnB,UAsBzB,sBAAKY,UAAU,2BAAf,UACI,wBACAyB,KAAK,SACLf,QAtBK,WACbpC,GAAa,IAsBL0B,UAAU,0CAHV,sBAMA,wBACAyB,KAAK,SACLzB,UAAU,uCAFV,6BCjChB,SAAS0B,IACL,MAOoBnF,IAAMwD,WAAWzD,GANjCQ,EADJ,EACIA,MACAE,EAFJ,EAEIA,QACA6B,EAHJ,EAGIA,cACAW,EAJJ,EAIIA,aACAG,EALJ,EAKIA,WACAtB,EANJ,EAMIA,UANJ,EAOIC,aAEJ,OACA,eAAC,IAAMqD,SAAP,WAEI,cAAC,EAAD,IAEA,cAAC,EAAD,IAGA,eAAC,EAAD,WACC7E,GAAS,iEACTE,GAAW,kDACTA,IAAY6B,EAAcF,QAAW,qDAEvCE,EAAc+C,KAAI,SAAAnD,GAAI,OACvB,cAAC,EAAD,CAEIM,KAAMN,EAAKM,KACXL,UAAWD,EAAKC,UAChBmC,WAAc,kBAAMrB,EAAaf,EAAKM,OACtC+B,SAAY,kBAAMnB,EAAWlB,EAAKM,QAJ7BN,EAAKM,cASfV,GACH,cAAC0C,EAAD,UACI,cAACK,EAAD,MAKJ,cAAC,EAAD,OCxBWS,MAVf,WAGE,OACE,cAACpF,EAAD,UACE,cAACiF,EAAD,OCfNV,IAASc,OACL,cAAC,EAAD,IACFZ,SAASC,eAAe,W","file":"static/js/main.d114b28d.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = React.createContext()\n\n//PUENTE PARA PASAR AL PROVIDER\nfunction TodoProvider(props){\n\n    const {item: todos,\n        saveItem: saveTodos, \n        loading,\n        error} = useLocalStorage(\"TODOS_V1\", [])\n\n\n    //ESTADOS\n    const [searchValue, setSearchValue] = React.useState(\"\");\n    const [openModal, setOpenModal] = React.useState(false);\n    \n    //CONSTANTES EN USO\n    const completedTodos = todos.filter(todo => !!todo.completed).length;  //Que tengan todo como falso que sea falso osea verdadero\n    const totalTodos = todos.length\n\n\n    //PARA ACTUALIZAR EL ESTADO EN SEARCH\n    let searchedTodos = [];\n\n    if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n    } else {\n    searchedTodos = todos.filter(todo => {\n        const todoText = todo.text.toLowerCase();\n        const searchText = searchValue.toLowerCase();\n        return todoText.includes(searchText);\n    });\n    }\n\n    //COMPLETAR TODOS\n    const completeTodo = (text) =>{\n    const todoIndex = todos.findIndex(todo => todo.text === text)\n\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true\n\n    saveTodos(newTodos)\n    }\n\n    //BORRAR TODOS\n    const deleteTodo = (text) =>{\n    const todoIndex = todos.findIndex(todo => todo.text === text)\n\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex,1)\n\n    saveTodos(newTodos)\n}\n\n//AÑADIR TODOS\nconst addTodo = (text) =>{\n    const newTodos = [...todos];\n    newTodos.push({\n        completed: false,\n        text,\n    })\n    saveTodos(newTodos)\n}\n\n\n\n\n    return(\n    <TodoContext.Provider value={{\n        error,\n        loading,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        addTodo,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n    }}>  \n        {props.children}\n    </TodoContext.Provider>\n    )\n}\n\nexport {TodoContext, TodoProvider}\n\n//El provider envuelve a toda la aplicación\n//Props.children => Cualquier componente que llame a Todo.provider y los componentes que llames van a poder utilizar el consumidor\n//Value es para compartir las propiedades\n\n","import React from \"react\";\n\n//CUSTOM HOOK\nfunction useLocalStorage(itemName, initialValue){\n    //ESTADOS\n    const [error, setError] = React.useState(false)\n    const [loading, setLoading] = React.useState(true)\n    const [item, setItem] = React.useState(initialValue)\n  \n    React.useEffect(() =>{\n      setTimeout(() =>{\n        try{\n          //VERIFICAR EL LOCAL STORAGE\n        \n          const localStorageItem = localStorage.getItem(itemName) \n          let parsedItem\n        \n          if(!localStorageItem){\n            localStorage.setItem(itemName, JSON.stringify(initialValue))\n            parsedItem = initialValue\n          }else{\n            parsedItem = JSON.parse(localStorageItem)\n          }\n    \n          setItem(parsedItem)\n          setLoading(false)\n        }catch(error){\n          setError(true)\n        }\n      }, 1000)\n    })\n  \n  \n  \n  \n    //GUARDAR LOS CAMBIOS EN LOCAL STORAGE\n    const saveItem = (newItem) =>{\n        try{\n        const stringifiedItem = JSON.stringify(newItem)\n        localStorage.setItem(itemName, stringifiedItem)\n        setItem(newItem)\n      }catch(error){\n        setError(true)\n      }\n      }\n  \n    return {\n      item,\n      saveItem,\n      loading,\n      error,\n    }\n  }\n\n  export {useLocalStorage}\n  \n  ","import React from \"react\";\nimport \"./TodoCounter.css\"\nimport {TodoContext} from \"../TodoContext\"\n\n\n// const estilos = {\n//     color: \"red\",\n//     backgroundColor: \"yellow\",\n// }\n\nfunction TodoCounter(){\n    const {totalTodos, completedTodos} = React.useContext(TodoContext)\n    return(\n        <h2 className=\"TodoCounter\" >Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    )\n}\n\nexport {TodoCounter}","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n\n    const {searchValue, setSearchValue} = React.useContext(TodoContext)\n\n    const onSearchValueChange = (event) =>{\n        console.log(event.target.value)\n        setSearchValue(event.target.value)\n    }\n\n    return [\n        <input \n        className=\"TodoSearch\" \n        placeholder=\"Cebolla\"\n        value={searchValue}\n        onChange={onSearchValueChange}\n        />,\n    ];\n}\n\nexport { TodoSearch };","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };","import React from 'react';\nimport './CreateTodoButton.css';\nimport {TodoContext} from \"../TodoContext\"\n\nfunction CreateTodoButton(props) {\n    const {openModal, setOpenModal} = React.useContext(TodoContext)\n\n\n    const onClickButton = () => {\n        // setOpenModal(!openModal)  //Esto niega el resultado del estado inicial sea true o false\n        setOpenModal(prevState => !prevState) //Otra forma de hacerlo\n    }\n\n    return (\n        <button \n        className=\"CreateTodoButton\"\n        onClick={() => onClickButton(\"hols\")}\n        >+\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n\n\n    return (\n        <li className=\"TodoItem\">\n        <span \n            className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n            onClick={props.onComplete}\n        >\n            √\n        </span>\n        <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n            {props.text}\n        </p>\n        <span \n            className=\"Icon Icon-delete\"\n            onClick={props.onDelete}\n            >\n            X\n        </span>\n        </li>\n    );\n}\n\nexport { TodoItem };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './modal.css';\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">\n      {children}\n    </div>,\n    document.getElementById('modal')\n  );\n}\n\nexport { Modal };\n\n//Se le pone children para poder enviarle al modal cualquier contenido","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./todoForm.css\"\n\nfunction TodoForm() {\n\n    const [newTodoValue, setNewTodoValue] = React.useState(\"\")\n\n    const {\n        addTodo,\n        setOpenModal,\n    } = React.useContext(TodoContext)\n\n    const onChange = (event) =>{\n        setNewTodoValue(event.target.value) \n    }\n\n    const onCancel = () =>{\n        setOpenModal(false)\n    }\n    \n    const onSubmit = (event) =>{\n        event.preventDefault()  //preventDefault ayuda a que cuando el formulario se envie no se recargue la pagina\n        addTodo(newTodoValue)\n        setOpenModal(false)\n    }\n\n\n    return(\n        <form onSubmit={onSubmit}>\n            <label>...</label>\n            <textarea placeholder=\"Cortar la cebolla para el almuerzo\"\n            value = {newTodoValue}\n            onChange= {onChange}>\n                \n            </textarea>\n            <div className=\"TodoForm-buttonContainer\">\n                <button \n                type=\"button\"\n                onClick={onCancel}\n                className=\"TodoForm-button TodoForm-button--cancel\">\n                    Cancelar\n                </button>\n                <button \n                type=\"submit\"\n                className=\"TodoForm-button TodoForm-button--add\">\n                    Añadir\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport {TodoForm}","import React from \"react\";\nimport {TodoCounter} from \"../TodoCounter\" \nimport { TodoContext } from \"../TodoContext\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport {TodoList} from \"../TodoList\"\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { TodoItem } from \"../TodoItem\";\nimport {Modal} from \"../Modal\"\nimport { TodoForm } from \"../todoForm\";\n\nfunction AppUI (){\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal} = React.useContext(TodoContext)\n\n    return (    \n    <React.Fragment>\n\n        <TodoCounter/>\n    \n        <TodoSearch/>\n    \n\n        <TodoList>\n        {error && <p>Desespérate, hubo un error...</p> }\n        {loading && <p>Estamos cargando</p>  }\n        {(!loading && !searchedTodos.length) && <p>Crea tu primer TODO!</p>  }\n\n        {searchedTodos.map(todo => (\n        <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete = {() => completeTodo(todo.text)}\n            onDelete = {() => deleteTodo(todo.text)}\n        />\n        ))}\n    </TodoList>\n\n    {!!openModal &&(\n    <Modal>\n        <TodoForm></TodoForm>\n    </Modal>\n    )}\n\n    \n    <CreateTodoButton/>\n        \n        </React.Fragment>)\n}\n\nexport {AppUI}","// import './App.css';\n\nimport react from \"react\";\nimport React from \"react\";\nimport { TodoProvider } from \"../TodoContext\";\nimport { AppUI } from \"./appUI\";\n\n\nconst defaultTodos = [\n  {text: \"Cortar Cebolla\", completed: false},\n  {text: \"Picar Cebolla\", completed: true},\n  {text: \"Freir Cebolla\", completed: false},\n  {text: \"Comer Cebolla\", completed: true},\n]\n\n\n//COMPONENTE PARA RENDER\nfunction App() {\n\n  //RENDER DEL COMPONENTE\n  return (\n    <TodoProvider>\n      <AppUI/>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// ReactDOM.createPortal(\n//   <App />,\n//   document.getElementById('modal')\n// )\n"],"sourceRoot":""}